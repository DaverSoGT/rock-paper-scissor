{"version":3,"sources":["components/button.js","assets/icon-paper.svg","assets/icon-rock.svg","assets/icon-scissors.svg","assets/image-rules.svg","assets/icon-close.svg","components/Rules.js","components/Title.js","components/Score.js","components/Header.js","components/GameBase.js","components/GameButton.js","components/Game.js","App.js","index.js"],"names":["Button","value","status","styleValue","openRules","type","onClick","className","Rules","setShowRules","ReactDOM","createPortal","src","imgRules","alt","imgIcon","document","getElementById","Title","Score","points","Header","GameBase","hide","children","GameButton","event","typeButton","styleButton","Game","numberUser","React","useState","showRules","itemName","initialValue","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","setItem","stringify","item","newItem","stringifiedItem","useLocalStorage","score","saveScore","setPoints","hideButtons","setHideButtons","hideBase","setHideBase","hideResult","setHideResult","results","setResults","selectedButtonType","setSelectedButtonType","selectedButtonStyle","setSelectedButtonStyle","showButton","setShowButton","styleCPUButton","setStyleCPUButton","state","setState","showResult","setShowResult","options","paper","scissors","rock","max","min","numberCPU","Math","floor","random","choiceCPU","setTimeout","useEffect","Fragment","App","openModal","setOpenModal","render","StrictMode"],"mappings":"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","file":"static/js/main.d9d83220.chunk.js","sourcesContent":["import React from 'react'\nimport '../styles/Button.scss'\n\nfunction Button({ value, status, styleValue, openRules }) {\n  return (\n    <button\n      type='button'\n      onClick={status}\n      className={styleValue}\n    >\n      {value}\n    </button>\n  )\n}\n\nexport { Button }","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","export default __webpack_public_path__ + \"static/media/image-rules.1a4a9422.svg\";","export default __webpack_public_path__ + \"static/media/icon-close.bde602ec.svg\";","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport '../styles/Rules.scss'\nimport imgRules from '../assets/image-rules.svg'\nimport imgIcon from '../assets/icon-close.svg'\nimport { Button } from './button'\n\nexport function Rules({ setShowRules }) {\n  const closeRules = () => {\n    setShowRules(false)\n  }\n\n  return ReactDOM.createPortal(\n    <section className='rules'>\n      <h1>RULES</h1>\n      <img src={imgRules} alt='rules'/>\n      <Button value='' styleValue='close' status={closeRules}>\n        <img src={imgIcon} alt='close-icon'></img>\n      </Button>\n    </section>,\n    document.getElementById('rules')\n  )\n}\n","import React from 'react'\n\nconst title = 'ROCK PAPER SCISSORS'\n\nexport function Title() {\n  return (\n    <h1 className='header__title'>{title}</h1>\n  )\n}","import React from 'react'\n\nexport function Score({points}) {\n  return (\n    <div className='score__container'>\n      <h3>SCORE</h3>\n      <p>{points}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Title } from './Title'\nimport { Score } from './Score'\nimport '../styles/Header.scss'\n\nexport function Header({ points }) {\n  return (\n    <div className='header__container'>\n      <Title/>\n      <Score points={points}/>\n    </div>\n  )\n}\n","import React from 'react'\nimport '../styles/GameBase.scss'\n\nexport function GameBase({ hide, children }) {\n  return (\n    <div className={!hide ? 'background buttons__container' : 'buttons__container'}>\n      { children }\n    </div>\n  )\n}","import React from 'react'\nimport '../styles/GameButton.scss'\n\nexport function GameButton({hide, event, typeButton, styleButton }) {\n  return (\n    <div onClick={event} className={`buttons__button ${styleButton}`}>\n      {!hide &&(\n        <img src={typeButton} alt={`${typeButton} icon`}/>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport paper from '../assets/icon-paper.svg'\nimport rock from '../assets/icon-rock.svg'\nimport scissors from '../assets/icon-scissors.svg'\nimport '../styles/index.scss'\nimport '../styles/Game.scss'\nimport '../styles/Rules.scss'\nimport { Button } from './button'\nimport { Rules } from './Rules'\nimport { Header } from './Header'\nimport { GameBase } from './GameBase'\nimport { GameButton } from './GameButton'\n\nfunction useLocalStorage(itemName, initialValue) {\n  const localStorageItem = localStorage.getItem(itemName)\n  let parsedItem\n\n  if (!localStorageItem) {\n    localStorage.setItem(itemName, JSON.stringify(initialValue))\n    parsedItem = initialValue\n  } else {\n    parsedItem = JSON.parse(localStorageItem)\n  }\n\n  const [item, setItem] = React.useState(parsedItem)\n\n  const saveItem = (newItem) => {\n    const stringifiedItem = JSON.stringify(newItem)\n    localStorage.setItem(itemName, stringifiedItem)\n    setItem(newItem)\n  }\n\n  return [\n    item,\n    saveItem\n  ]\n}\n\nfunction Game() {\n  const [showRules, setShowRules] = React.useState(false)\n  const [score, saveScore] = useLocalStorage('SCORE_V1', '')\n  const [points, setPoints] = React.useState(!score ? 0 : score)\n  const [hideButtons, setHideButtons] = React.useState(true)\n  const [hideBase, setHideBase] = React.useState(false)\n  const [hideResult, setHideResult] = React.useState(false)\n  const [results, setResults] = React.useState(false)\n  const [selectedButtonType, setSelectedButtonType] = React.useState()\n  const [selectedButtonStyle, setSelectedButtonStyle] = React.useState('')\n  const [showButton, setShowButton] = React.useState('empty-circle')\n  const [styleCPUButton, setStyleCPUButton] = React.useState()\n  const [state, setState] = React.useState()\n  const [showResult, setShowResult] = React.useState(false)\n\n  const options = [\n    paper,\n    scissors,\n    rock\n  ]\n  \n  const random = () => Math.floor(Math.random()*(max - min)) + min\n\n  const max = 3\n  const min = 0\n  const numberCPU = random()\n  let numberUser\n\n  const openRules = () => {\n    setShowRules(true)\n  }\n\n  const paperClick = () => {\n    setHideButtons(false)\n    setHideBase(true)\n    setResults(true)\n    setHideResult(true)\n    setSelectedButtonStyle('paper')\n    setSelectedButtonType(paper)\n    choiceCPU()\n    numberUser = 0\n  }\n\n  const rockClick = () => {\n    setHideButtons(false)\n    setHideBase(true)\n    setResults(true)\n    setHideResult(true)\n    setSelectedButtonStyle('rock-clicked')\n    setSelectedButtonType(rock)\n    choiceCPU()\n    numberUser = 2\n  }\n\n  const scissorsClick = () => {\n    setHideButtons(false)\n    setHideBase(true)\n    setResults(true)\n    setHideResult(true)\n    setSelectedButtonStyle('scissors-clicked')\n    setSelectedButtonType(scissors)\n    choiceCPU()\n    numberUser = 1\n  }\n\n  const choiceCPU = () => {\n    setTimeout(() => {\n      setHideBase(false)\n      if (numberCPU === 0) {\n        setShowButton(options[numberCPU])\n        setStyleCPUButton('paper-cpu')\n      }\n      else if (numberCPU === 1) {\n        setShowButton(options[numberCPU])\n        setStyleCPUButton('scissors-cpu') \n      }\n      else if (numberCPU === 2) {\n        setShowButton(options[numberCPU])\n        setStyleCPUButton('rock-cpu')\n      }\n      setTimeout(() => {\n        if (numberCPU === numberUser) {\n          setState('Draw')\n          setShowResult(true)\n        } else if (numberCPU === 0 && numberUser === 1) {\n          setState('You Win')\n          setShowResult(true)\n          setPoints(points + 1)\n        } else if (numberCPU === 0 && numberUser === 2) {\n          setState('You Lose')\n          setShowResult(true)\n          setPoints(points === 0 ? 0 : points - 1)\n        } else if (numberCPU === 1 && numberUser === 0) {\n          setState('You Lose')\n          setShowResult(true)\n          setPoints(points === 0 ? 0 : points - 1)\n        } else if (numberCPU === 1 && numberUser === 2) {\n          setState('You Win')\n          setShowResult(true)\n          setPoints(points + 1)\n        } else if (numberCPU === 2 && numberUser === 0) {\n          setState('You Win')\n          setShowResult(true)\n          setPoints(points + 1)\n        } else if (numberCPU === 2 && numberUser === 1) {\n          setState('You Lose')\n          setShowResult(true)\n          setPoints(points === 0 ? 0 : points - 1)\n        }\n      }, 1000)\n    }, 1500)\n  }\n\n  const comeBack = () => {\n    setHideButtons(true)\n    setHideBase(false)\n    setHideResult(false)\n    setResults(false)\n    setSelectedButtonType()\n    setSelectedButtonStyle('')\n    setShowButton('empty-circle')\n    setStyleCPUButton()\n    setState()\n    setShowResult(false)\n  }\n\n  React.useEffect(() => {\n    saveScore(points)\n  })\n  \n  return ReactDOM.createPortal(\n    <section className='modal'>\n      <Header points={points}/>\n      {!!hideButtons &&(\n        <GameBase>\n          <GameButton hide={hideBase} event={paperClick} typeButton={paper} styleButton={'paper'}/>\n          <GameButton hide={hideBase} event={rockClick} typeButton={rock} styleButton={'rock'}/>\n          <GameButton hide={hideBase} event={scissorsClick} typeButton={scissors} styleButton={'scissors'}/>\n        </GameBase>\n      )}\n      {!!results &&(\n      <GameBase hide={hideResult}>\n        <GameButton typeButton={selectedButtonType} styleButton={selectedButtonStyle}/>\n        <p className='description left'>You Picked</p>\n        <GameButton hide={hideBase} typeButton={showButton} styleButton={!styleCPUButton ? showButton : styleCPUButton}/>\n        <p className='description right'>The CPU Picked</p>\n        {!!showResult &&(\n          <React.Fragment>\n            <p className='result'>{state}</p>\n            <Button status={comeBack} styleValue='light go-back' value='PLAY AGAIN'/>\n          </React.Fragment>\n        )}\n      </GameBase>\n      )}\n      <Button value='RULES' styleValue='transparent' status={openRules}/>\n      {!!showRules &&(\n        <Rules showRules={showRules} setShowRules={setShowRules}/>\n      )}\n    </section>,\n    document.getElementById('game')\n  )\n}\n\nexport { Game }","import React from 'react'\nimport './styles/App.scss'\nimport { Button } from './components/button'\nimport { Game } from './components/Game'\n\nfunction App() {\n  const [openModal, setOpenModal] = React.useState(false)\n  const [showButton, setShowButton] = React.useState(true)\n  \n  const openGame = () => {\n    setOpenModal(true)\n    setShowButton(false)\n  }\n\n  return (\n    <React.Fragment>\n      {!!showButton &&(\n        <Button \n          value='START'\n          status={openGame}\n          styleValue='light'\n        />\n      )}\n      {!!openModal &&(\n        <Game/>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}